Resources:
  DemoVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: DemoVPC
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DemoVPC
      CidrBlock: 10.0.10.0/24
      AvailabilityZone: ap-southeast-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnetA
  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DemoVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: ap-southeast-1b
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnetB
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DemoVPC
      CidrBlock: 10.0.16.0/20
      AvailabilityZone: ap-southeast-1a
      Tags:
        - Key: Name
          Value: PrivateSubnetA
  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DemoVPC
      CidrBlock: 10.0.32.0/20
      AvailabilityZone: ap-southeast-1b
      Tags:
        - Key: Name
          Value: PrivateSubnetB
  DemoIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: DemoIGW
  AttachtoVPC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref DemoVPC
      InternetGatewayId: !Ref DemoIGW
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref DemoVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref DemoVPC
      Tags:
        - Key: Name
          Value: PrivateRouteTable
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetA
  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetB
  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetA
  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetB
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref DemoIGW
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId: !Ref NatInstance
  BastionHost:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0e2e292a9c4fb2f29
      InstanceType: t2.micro
      SubnetId: !Ref PublicSubnetA
      Tags:
        - Key: Name
          Value: BastionHost
  DemoKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: DemoKeyPair
  PrivateInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0e2e292a9c4fb2f29
      InstanceType: t2.micro
      KeyName: !Ref DemoKeyPair
      SubnetId: !Ref PrivateSubnetA
      SecurityGroupIds:
        - !Ref InstanceSecurityGrup
      Tags:
        - Key: Name
          Value: PrivateInstance
  InstanceSecurityGrup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: PrivateSG
      GroupDescription: Allow SSH form BastionHost
      VpcId: !Ref DemoVPC
  InstanceSecurityGrupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref InstanceSecurityGrup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      Description: Allow SSH traffic from a specified source
      CidrIp: 0.0.0.0/0
  NatInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0e2e292a9c4fb2f29
      InstanceType: t2.micro
      KeyName: !Ref DemoKeyPair
      SubnetId: !Ref PublicSubnetA
      SecurityGroupIds:
        - !Ref NatSecurityGroup
      Tags:
        - Key: Name
          Value: NatInstance
  NatSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: NatInstanceSG
      GroupDescription: SG for NAT Instance
      VpcId: !Ref DemoVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 10.0.0.0/16
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 10.0.0.0/16
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: 10.0.0.0/16